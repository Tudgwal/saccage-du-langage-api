security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            stateless: true
            jwt: ~
            json_login:
                check_path: auth
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            lazy: true
            provider: app_user_provider
        
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - {path: /party/delete, roles: ROLE_ADMIN}
        - {path: /party/edit, roles: ROLE_USER}
        - {path: /party/create, roles: ROLE_USER}
        - {path: /politician/delete, roles: ROLE_ADMIN}
        - {path: /politician/edit, roles: ROLE_USER}
        - {path: /politician/create, roles: ROLE_USER}
        - {path: ^/vote, roles: ROLE_USER}
        - {path: /quote/delete, roles: ROLE_USER}
        - {path: /quote/create, roles: ROLE_USER}
        - {path: /user/create, roles: IS_AUTHENTICATED_ANONYMOUSLY} # Allow anonymous users to create a user
        - {path: /user/delete, roles: ROLE_ADMIN}
        - {path: /user/me, roles: ROLE_USER}
        - {path: /user/edit, roles: ROLE_USER}
        - {path: /user/purgeVotes, roles: ROLE_ADMIN}
        - {path: /user/purgeQuotes, roles: ROLE_ADMIN}
        - {path: ^/user, roles: ROLE_ADMIN}

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
